/*
    Breathing led design
    In this programme, we use the Xilinx ZYNQ 7z010 to design
    a breathing led light, which is on for 1 second, then 
    off for 1 second and on for 2 seconds and off for 2 seconds 
    then on and off repeatedly till on for 9 seconds and off for 9
    seconds then go start from the beginning 
*/

module week_1_LED(
    input clk, // input clock signal
    input rst_n, // input reset signal
    output reg led // out put led  control signal
);

// counter signal design 
// first counter cnt0
reg [31:0] cnt0;
reg [31:0] x;
wire add_cnt0;
wire end_cnt0;
always@(posedge clk or negedge rst_n)begin
    if(!rst_n)begin
        cnt0 <= 0;
     end
     else if(add_cnt0)begin
        if(end_cnt0)
            cnt0<=0;
        else
            cnt0<=cnt0+1;      
     end
end
assign add_cnt0=1;
assign end_cnt0=add_cnt0 && cnt0==x-1;

// counter signal design 
// second counter cnt0
reg [3:0] cnt1;
wire add_cnt1;
wire end_cnt1;
always@(posedge clk or negedge rst_n)begin
    if(!rst_n)begin
        cnt1<=0;
    end
    else if(add_cnt1)begin
        if(end_cnt1)
            cnt1<=0;
        else 
            cnt1<=cnt1+1;
    end
end
assign add_cnt1=end_cnt0;
assign end_cnt1=add_cnt1 && cnt1==9-1;

// led control signal design
always@(*)begin
    case(cnt1)
         0: x=100000000;
         1: x=200000000;
         2: x=300000000;
         3: x=400000000;
         4: x=500000000;
         5: x=600000000;
         6: x=700000000;
         7: x=800000000;
     default:
            x=900000000; 
    endcase
end

always@(posedge clk or negedge rst_n)begin
    if(!rst_n)
        led <= 0; // if the negative edge of signal rst_n is detected, the led is off 
    else if (add_cnt0 && cnt0==100000000-1)begin
        led <= 1; // led be on
    end
    else if(end_cnt0)begin
        led <= 0; // led be off
    end
end

endmodule
